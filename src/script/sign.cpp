// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include "script/sign.h"

#include "primitives/transaction.h"
#include "key.h"
#include "keystore.h"
#include "script/standard.h"
#include "uint256.h"
#include "util.h"

#include <boost/foreach.hpp>

using namespace std;

typedef vector<unsigned char> valtype;

bool Sign1(const CKeyID& address, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)
{
    CKey key;
    if (!keystore.GetKey(address, key))
        return false;

    vector<unsigned char> vchSig;
    if (!key.Sign(hash, vchSig))
        return false;
    vchSig.push_back((unsigned char)nHashType);
    scriptSigRet << vchSig;

    return true;
}

bool SignN(const vector<valtype>& multisigdata, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)
{
    int nSigned = 0;
    int nRequired = multisigdata.front()[0];
    for (unsigned int i = 1; i < multisigdata.size()-1 && nSigned < nRequired; i++)
    {
        const valtype& pubkey = multisigdata[i];
        CKeyID keyID = CPubKey(pubkey).GetID();
        if (Sign1(keyID, keystore, hash, nHashType, scriptSigRet))
            ++nSigned;
    }
    return nSigned==nRequired;
}

/**
 * Sign scriptPubKey with private keys stored in keystore, given transaction hash and hash type.
 * Signatures are returned in scriptSigRet (or returns false if scriptPubKey can't be signed),
 * unless whichTypeRet is TX_SCRIPTHASH, in which case scriptSigRet is the redemption script.
 * Returns false if scriptPubKey could not be completely satisfied.
 */
bool Solver(const CKeyStore& keystore, const CScript& scriptPubKey, uint256 hash, int nHashType,
                  CScript& scriptSigRet, txnouttype& whichTypeRet)
{
    scriptSigRet.clear();

    vector<valtype> vSolutions;
    if (!Solver(scriptPubKey, whichTypeRet, vSolutions))
    {
        LogPrintf("*** solver solver failed \n");
        return false;
    }

    CKeyID keyID;
    switch (whichTypeRet)
    {
    case TX_NONSTANDARD:
    case TX_NULL_DATA:
    {
        LogPrintf("*** null data \n");
        return false;
    }
    case TX_PUBKEY:
        keyID = CPubKey(vSolutions[0]).GetID();
        if(!Sign1(keyID, keystore, hash, nHashType, scriptSigRet))
        {
            LogPrintf("*** Sign1 failed \n");
            return false;
        }
        return true;
    case TX_PUBKEYHASH:
        keyID = CKeyID(uint160(vSolutions[0]));
        if (!Sign1(keyID, keystore, hash, nHashType, scriptSigRet))
        {
            LogPrintf("*** solver failed to sign \n");
            return false;
        }
        else
        {
            CPubKey vch;
            keystore.GetPubKey(keyID, vch);
            scriptSigRet << ToByteVector(vch);
        }
        return true;
    case TX_SCRIPTHASH:
        return keystore.GetCScript(uint160(vSolutions[0]), scriptSigRet);

    case TX_MULTISIG:
        scriptSigRet << OP_0; // workaround CHECKMULTISIG bug
        return (SignN(vSolutions, keystore, hash, nHashType, scriptSigRet));
    }
    LogPrintf("*** solver no case met \n");
    return false;
}

bool SignSignature(const CKeyStore &keystore, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, int nHashType)
{
    assert(nIn < txTo.vin.size());
    CTxIn& txin = txTo.vin[nIn];

    // Leave out the signature from the hash, since a signature can't sign itself.
    // The checksig op will also drop the signatures from its hash.
    uint256 hash = SignatureHash(fromPubKey, txTo, nIn, nHashType);

    txnouttype whichType;
    if (!Solver(keystore, fromPubKey, hash, nHashType, txin.scriptSig, whichType))
        return false;

    if (whichType == TX_SCRIPTHASH)
    {
        // Solver returns the subscript that need to be evaluated;
        // the final scriptSig is the signatures from that
        // and then the serialized subscript:
        CScript subscript = txin.scriptSig;

        // Recompute txn hash using subscript in place of scriptPubKey:
        uint256 hash2 = SignatureHash(subscript, txTo, nIn, nHashType);

        txnouttype subType;
        bool fSolved =
            Solver(keystore, subscript, hash2, nHashType, txin.scriptSig, subType) && subType != TX_SCRIPTHASH;
        // Append serialized subscript whether or not it is completely signed:
        txin.scriptSig << static_cast<valtype>(subscript);
        if (!fSolved) return false;
    }

    // Test solution
    return VerifyScript(txin.scriptSig, fromPubKey, STANDARD_SCRIPT_VERIFY_FLAGS, MutableTransactionSignatureChecker(&txTo, nIn));
}

bool SignSignature(const CKeyStore &keystore, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType)
{
    assert(nIn < txTo.vin.size());
    CTxIn& txin = txTo.vin[nIn];
    assert(txin.prevout.n < txFrom.vout.size());
    const CTxOut& txout = txFrom.vout[txin.prevout.n];

    return SignSignature(keystore, txout.scriptPubKey, txTo, nIn, nHashType);
}

static CScript PushAll(const vector<valtype>& values)
{
    CScript result;
    BOOST_FOREACH(const valtype& v, values)
        result << v;
    return result;
}

struct BlacklistEntry {
    uint32_t begin;
    uint32_t end;
    const char *name;
};

static struct BlacklistEntry BlacklistedPrefixes[] = {
{0x07D54FC7, 0x07D54FC7, "MARC1"},
{0x8919E771, 0x8919E771, "MARC2"},
{0x5E07CD81, 0x5E07CD81, "MARC3"},
{0xDFC4C97A, 0xDFC4C97A, "MARC4"},
{0xCD43C1E7, 0xCD43C1E7, "MARC5"},
{0x300F59A3, 0x300F59A3, "MARC6"},
{0xB58BDBB6, 0xB58BDBB6, "MARC7"},
{0x49A8BEB6, 0x49A8BEB6, "MARC8"},
{0xFA88E77A, 0xFA88E77A, "MARC9"},
{0x9F09F55C, 0x9F09F55C, "MARC10"},
{0x1AD3D63A, 0x1AD3D63A, "MARC11"},
{0x25078C49, 0x25078C49, "MARC12"},
{0x0A72E1D2, 0x0A72E1D2, "MARC13"},
{0x7C49471F, 0x7C49471F, "MARC14"},
{0xCB3976CC, 0xCB3976CC, "MARC15"},
{0x0295B6F6, 0x0295B6F6, "MARC16"},
{0x8DFF75D8, 0x8DFF75D8, "MARC17"},
{0x1E38D009, 0x1E38D009, "MARC18"},
{0xA6967B44, 0xA6967B44, "MARC19"},
{0x8E02A1E4, 0x8E02A1E4, "MARC20"},
{0x8F896706, 0x8F896706, "MARC21"},
{0xE318E490, 0xE318E490, "MARC22"},
{0xABA6DC3A, 0xABA6DC3A, "MARC23"},
{0xD39BF02F, 0xD39BF02F, "MARC24"},
{0xF32E6966, 0xF32E6966, "MARC25"},
{0x8E711D23, 0x8E711D23, "MARC26"},
{0xB86A6D29, 0xB86A6D29, "MARC27"},
{0x9C5C17D6, 0x9C5C17D6, "MARC28"},
{0xEC6F9B4F, 0xEC6F9B4F, "MARC29"},
{0xF9B37340, 0xF9B37340, "MARC30"},
{0xA03B332C, 0xA03B332C, "MARC31"},
{0x3C76288B, 0x3C76288B, "MARC32"},
{0x79C5CFEB, 0x79C5CFEB, "MARC33"},
{0xE8EB404A, 0xE8EB404A, "MARC34"},
{0x52C410D8, 0x52C410D8, "MARC35"},
{0x293A8C9E, 0x293A8C9E, "MARC36"},
{0x61BDED08, 0x61BDED08, "MARC37"},
{0xDDD86657, 0xDDD86657, "MARC38"},
{0x164AD665, 0x164AD665, "MARC39"},
{0xC5FFD4F2, 0xC5FFD4F2, "MARC40"},
{0xAF6511A2, 0xAF6511A2, "MARC41"},
{0x9E57130B, 0x9E57130B, "MARC42"},
{0xD392B8E2, 0xD392B8E2, "MARC43"},
{0xB3364788, 0xB3364788, "MARC44"},
{0xAC73E10D, 0xAC73E10D, "MARC45"},
{0xA8B13D8F, 0xA8B13D8F, "MARC46"},
{0xDC122F39, 0xDC122F39, "MARC47"},
{0xA2BF6B3B, 0xA2BF6B3B, "MARC48"},
{0xB2E8BE9E, 0xB2E8BE9E, "MARC49"},
{0xB0DD4AB3, 0xB0DD4AB3, "MARC50"},
{0x62636F09, 0x62636F09, "MARC51"},
{0x94494242, 0x94494242, "MARC52"},
{0xF9158746, 0xF9158746, "MARC53"},
{0xC8CEC032, 0xC8CEC032, "MARC54"},
{0xC41C330E, 0xC41C330E, "MARC55"},
{0xE307B958, 0xE307B958, "MARC56"},
{0xD6B29CFD, 0xD6B29CFD, "MARC57"},
{0x5BDF51E2, 0x5BDF51E2, "MARC58"},
{0xCAF70788, 0xCAF70788, "MARC59"},
{0x85FD3CCF, 0x85FD3CCF, "MARC60"},
{0x27BE9B66, 0x27BE9B66, "MARC61"},
{0x9EBAD2F5, 0x9EBAD2F5, "MARC62"},
{0x654B4B12, 0x654B4B12, "MARC63"},
{0x52581841, 0x52581841, "MARC64"},
{0x40CFBB01, 0x40CFBB01, "MARC65"},
{0x3017BBC3, 0x3017BBC3, "MARC66"},
{0x53788DC1, 0x53788DC1, "MARC67"},
{0xC6E139AE, 0xC6E139AE, "MARC68"},
{0xABFEF87C, 0xABFEF87C, "MARC69"},
{0xF28C2742, 0xF28C2742, "MARC70"},
{0x270F2D66, 0x270F2D66, "MARC71"},
{0x266D6569, 0x266D6569, "MARC72"},
{0x1D3A0B81, 0x1D3A0B81, "MARC73"},
{0x7C3188B7, 0x7C3188B7, "MARC74"},
{0x85E5B54D, 0x85E5B54D, "MARC75"},
{0x40C6327C, 0x40C6327C, "MARC76"},
{0x2B9CF147, 0x2B9CF147, "MARC77"},
{0xDB278645, 0xDB278645, "MARC78"},
{0xB7ED843D, 0xB7ED843D, "MARC79"},
{0x28906509, 0x28906509, "MARC80"},
{0xFFF4C96F, 0xFFF4C96F, "MARC81"},
{0x3CB5E2B7, 0x3CB5E2B7, "MARC82"},
{0x72842A01, 0x72842A01, "MARC83"},
{0x4E766D36, 0x4E766D36, "MARC84"},
{0x7A8958C4, 0x7A8958C4, "MARC85"},
{0x71888E05, 0x71888E05, "MARC86"},
{0x64FD4BFF, 0x64FD4BFF, "MARC87"},
{0xED72B541, 0xED72B541, "MARC88"},
{0x234B2ACE, 0x234B2ACE, "MARC89"},
{0x179959DA, 0x179959DA, "MARC90"},
{0xA7C9618A, 0xA7C9618A, "MARC91"},
{0xA4504A3A, 0xA4504A3A, "MARC92"},
{0x0E0DF656, 0x0E0DF656, "MARC93"},
{0x696F44D4, 0x696F44D4, "MARC94"},
{0xC4A6EA22, 0xC4A6EA22, "MARC95"},
{0x7DC623CD, 0x7DC623CD, "MARC96"},
{0x7B17D794, 0x7B17D794, "MARC97"},
{0xC4E40EE6, 0xC4E40EE6, "MARC98"},
{0x13891C26, 0x13891C26, "MARC99"},
{0xEEFA741F, 0xEEFA741F, "MARC100"},
{0xA439FEB7, 0xA439FEB7, "MARC101"},
{0x517F73EB, 0x517F73EB, "MARC102"},
{0xA1EA7B1E, 0xA1EA7B1E, "MARC103"},
{0x72917886, 0x72917886, "MARC104"},
{0x1A309697, 0x1A309697, "MARC105"},
{0x065B16AF, 0x065B16AF, "MARC106"},
{0x390FA1A4, 0x390FA1A4, "MARC107"},
{0x0CA309EF, 0x0CA309EF, "MARC108"},
{0xE0891D35, 0xE0891D35, "MARC109"},
{0xC2436ED3, 0xC2436ED3, "MARC110"},
{0x8B45840D, 0x8B45840D, "MARC111"},
{0xBEB4E6F9, 0xBEB4E6F9, "MARC112"},
{0x4C32CCC5, 0x4C32CCC5, "MARC113"},
{0x47F84D8F, 0x47F84D8F, "MARC114"},
{0x461BA640, 0x461BA640, "MARC115"},
{0xAA57DAD8, 0xAA57DAD8, "MARC116"},
{0xB2711E7C, 0xB2711E7C, "MARC117"},
{0x394A3580, 0x394A3580, "MARC118"},
{0x5E653843, 0x5E653843, "MARC119"},
{0x732873F0, 0x732873F0, "MARC120"},
{0x8DBAA5B8, 0x8DBAA5B8, "MARC121"},
{0x00A167E1, 0x00A167E1, "MARC122"},
{0x4BAF593B, 0x4BAF593B, "MARC123"},
{0xB0CAC506, 0xB0CAC506, "MARC124"},
{0xD897A734, 0xD897A734, "MARC125"},
{0xE4396DA6, 0xE4396DA6, "MARC126"},
{0xFBE3D516, 0xFBE3D516, "MARC127"},
{0x423FC305, 0x423FC305, "MARC128"},
{0x96F132BE, 0x96F132BE, "MARC129"},
{0xA2B5C81E, 0xA2B5C81E, "MARC130"},
{0xF1A753C0, 0xF1A753C0, "MARC131"},
{0xBFF8A714, 0xBFF8A714, "MARC132"},
{0xEDE16F6F, 0xEDE16F6F, "MARC133"},
{0x72C693B4, 0x72C693B4, "MARC134"},
{0xE10493F8, 0xE10493F8, "MARC135"},
{0xB99FD576, 0xB99FD576, "MARC136"},
{0xD012C836, 0xD012C836, "MARC137"},
{0x2D5BFAC1, 0x2D5BFAC1, "MARC138"},
{0x6ADEBAEE, 0x6ADEBAEE, "MARC139"},
{0x6DD73267, 0x6DD73267, "MARC140"},
{0x3B7BD667, 0x3B7BD667, "MARC141"},
{0xB3C73382, 0xB3C73382, "MARC142"},
{0x5749E1C1, 0x5749E1C1, "MARC143"},
{0xD4A97C04, 0xD4A97C04, "MARC144"},
{0xAC530398, 0xAC530398, "MARC145"},
{0xB8245F17, 0xB8245F17, "MARC146"},
{0x4B03D3DB, 0x4B03D3DB, "MARC147"},
{0x1403E5F3, 0x1403E5F3, "MARC148"},
{0x95FA312E, 0x95FA312E, "MARC149"},
{0xC6DB082D, 0xC6DB082D, "MARC150"},
{0xD3EB5420, 0xD3EB5420, "MARC151"},
{0x51B2A416, 0x51B2A416, "MARC152"},
{0x2E271F72, 0x2E271F72, "MARC153"},
{0x33A862B8, 0x33A862B8, "MARC154"},
{0xB7B14962, 0xB7B14962, "MARC155"},
{0x8426EF59, 0x8426EF59, "MARC156"},
{0x595FA03C, 0x595FA03C, "MARC157"},
{0x62D7D650, 0x62D7D650, "MARC158"},
{0xEEDA8C74, 0xEEDA8C74, "MARC159"},
{0x39DA1C2D, 0x39DA1C2D, "MARC160"},
{0x6044AFEC, 0x6044AFEC, "MARC161"},
{0x501613A3, 0x501613A3, "MARC162"},
{0x3E251A45, 0x3E251A45, "MARC163"},
{0xDFD9B2C5, 0xDFD9B2C5, "MARC164"},
{0xB5A4A05E, 0xB5A4A05E, "MARC165"},
{0xCD1FDAFD, 0xCD1FDAFD, "MARC166"},
{0x90FEFC82, 0x90FEFC82, "MARC167"},
{0xF545E588, 0xF545E588, "MARC168"},
{0xAF7C542C, 0xAF7C542C, "MARC169"},
{0x055CDC06, 0x055CDC06, "MARC170"},
{0xFC56728D, 0xFC56728D, "MARC171"},
{0xFBD9B825, 0xFBD9B825, "MARC172"},
{0x895E27AB, 0x895E27AB, "MARC173"},
{0x8897504F, 0x8897504F, "MARC174"},
{0x269011D9, 0x269011D9, "MARC175"},
{0x0903AB03, 0x0903AB03, "MARC176"},
{0x131CD162, 0x131CD162, "MARC177"},
{0x94CE9C9B, 0x94CE9C9B, "MARC178"},
{0x987C95B6, 0x987C95B6, "MARC179"},
{0xAE45BFA2, 0xAE45BFA2, "MARC180"},
{0x60D53DCA, 0x60D53DCA, "MARC181"},
{0x9E6D3693, 0x9E6D3693, "MARC182"},
{0x564F8BD6, 0x564F8BD6, "MARC183"},
{0xD9C66C41, 0xD9C66C41, "MARC184"},
{0x0FCCA6BA, 0x0FCCA6BA, "MARC185"},
{0xA467FFEC, 0xA467FFEC, "MARC186"},
{0x228FD2BE, 0x228FD2BE, "MARC187"},
{0x582E3F60, 0x582E3F60, "MARC188"},
{0xF08BBD92, 0xF08BBD92, "MARC189"},
{0x665D4C17, 0x665D4C17, "MARC190"},
{0x3C246E79, 0x3C246E79, "MARC191"},
{0xFCCD8279, 0xFCCD8279, "MARC192"},
{0x7A386E4E, 0x7A386E4E, "MARC193"},
{0x213E6C64, 0x213E6C64, "MARC194"},
{0x89CE1DA1, 0x89CE1DA1, "MARC195"},
{0x9C8336CF, 0x9C8336CF, "MARC196"},
{0xC7FA5807, 0xC7FA5807, "MARC197"},
{0xF3DD9362, 0xF3DD9362, "MARC198"},
{0x2DFA251C, 0x2DFA251C, "MARC199"},
{0x9B606ECD, 0x9B606ECD, "MARC200"},
{0x72DF5610, 0x72DF5610, "MARC201"},
{0xBEC76BBB, 0xBEC76BBB, "MARC202"},
{0x63C4F97B, 0x63C4F97B, "MARC203"},
{0x2F1CD8FB, 0x2F1CD8FB, "MARC204"},
{0xE8A25C52, 0xE8A25C52, "MARC205"},
{0x87510C54, 0x87510C54, "MARC206"},
{0x8F8359EB, 0x8F8359EB, "MARC207"},
{0x33B8CBC8, 0x33B8CBC8, "MARC208"},
{0xEB7A833C, 0xEB7A833C, "MARC209"},
{0x0F255B2E, 0x0F255B2E, "MARC210"},
{0xEC35AFCA, 0xEC35AFCA, "MARC211"},
{0xA39D0BC5, 0xA39D0BC5, "MARC212"},
{0xB376BD08, 0xB376BD08, "MARC213"},
{0xAEE606CF, 0xAEE606CF, "MARC214"},
{0x0F0DDB0E, 0x0F0DDB0E, "MARC215"},
{0x1C088602, 0x1C088602, "MARC216"},
{0x54BE366F, 0x54BE366F, "MARC217"},
{0x25C68857, 0x25C68857, "MARC218"},
{0xF2867E50, 0xF2867E50, "MARC219"},
{0x3830132B, 0x3830132B, "MARC220"},
{0x4458FAD1, 0x4458FAD1, "MARC221"},
{0xD2973021, 0xD2973021, "MARC222"},
{0x2D0C52EB, 0x2D0C52EB, "MARC223"},
{0xD5D9076A, 0xD5D9076A, "MARC224"},
{0x5DF90B03, 0x5DF90B03, "MARC225"},
{0x911A18F8, 0x911A18F8, "MARC226"},
{0x8705052F, 0x8705052F, "MARC227"},
{0x19D8D0A4, 0x19D8D0A4, "MARC228"},
{0x6FE7FCC7, 0x6FE7FCC7, "MARC229"},
{0x44AC0DCF, 0x44AC0DCF, "MARC230"},
{0xD8F8665F, 0xD8F8665F, "MARC231"},
{0x6517DB0F, 0x6517DB0F, "MARC232"},
{0xA53AA481, 0xA53AA481, "MARC233"},
{0x8EAEEE2E, 0x8EAEEE2E, "MARC234"},
{0x26E48DB1, 0x26E48DB1, "MARC235"},
{0xF13FEBB6, 0xF13FEBB6, "MARC236"},
{0xFBDD58CA, 0xFBDD58CA, "MARC237"},
{0x2BCBD08B, 0x2BCBD08B, "MARC238"},
{0x92B27D05, 0x92B27D05, "MARC239"},
{0x3FF17A9F, 0x3FF17A9F, "MARC240"},
{0x30F12C5E, 0x30F12C5E, "MARC241"},
{0x4F5A8804, 0x4F5A8804, "MARC242"},
{0x4231DCB8, 0x4231DCB8, "MARC243"},
{0x3A9120E6, 0x3A9120E6, "MARC244"},
{0x3B23AB9E, 0x3B23AB9E, "MARC245"},
{0xD89F65DA, 0xD89F65DA, "MARC246"},
{0x9A301B9A, 0x9A301B9A, "MARC247"},
{0xD03B5140, 0xD03B5140, "MARC248"},
{0x606C255E, 0x606C255E, "MARC249"},
{0xE316033B, 0xE316033B, "MARC250"},
{0x4B559CD8, 0x4B559CD8, "MARC251"},
{0x69376035, 0x69376035, "MARC252"},
{0x07865E5B, 0x07865E5B, "MARC253"},
{0x86BA5F4B, 0x86BA5F4B, "MARC254"},
{0x650A033F, 0x650A033F, "MARC255"},
{0xEF5C51F2, 0xEF5C51F2, "MARC256"},
{0xB6B6148D, 0xB6B6148D, "MARC257"},
{0x4D578D38, 0x4D578D38, "MARC258"},
{0x1FF7E999, 0x1FF7E999, "MARC259"},
{0x9E3983E1, 0x9E3983E1, "MARC260"},
{0xC056F17E, 0xC056F17E, "MARC261"},
{0x05B993E0, 0x05B993E0, "MARC262"},
{0x2163C0EB, 0x2163C0EB, "MARC263"},
{0x327800A2, 0x327800A2, "MARC264"},
{0x6DB68DCC, 0x6DB68DCC, "MARC265"},
{0x34F0DE22, 0x34F0DE22, "MARC266"},
{0x473BEBFC, 0x473BEBFC, "MARC267"},
{0xD391F7BF, 0xD391F7BF, "MARC268"},
{0x80DDA543, 0x80DDA543, "MARC269"},
{0x224B88D4, 0x224B88D4, "MARC270"},
{0xB06CBBDF, 0xB06CBBDF, "MARC271"},
{0xC86F8BBB, 0xC86F8BBB, "MARC272"},
{0x362B37DF, 0x362B37DF, "MARC273"},
{0x07933566, 0x07933566, "MARC274"},
{0xA2B91EE0, 0xA2B91EE0, "MARC275"},
{0xCCC806F2, 0xCCC806F2, "MARC276"},
{0xE89762F9, 0xE89762F9, "MARC277"},
{0xFA97E59C, 0xFA97E59C, "MARC278"},
{0x464BA60C, 0x464BA60C, "MARC279"},
{0x7AD45551, 0x7AD45551, "MARC280"},
{0x5C28920F, 0x5C28920F, "MARC281"},
{0xCD4A2B3F, 0xCD4A2B3F, "MARC282"},
{0xF5990175, 0xF5990175, "MARC283"},
{0xCC4FF9FB, 0xCC4FF9FB, "MARC284"},
{0xA0C6F255, 0xA0C6F255, "MARC285"},
{0x5DE7D623, 0x5DE7D623, "MARC286"},
{0xFEE5B845, 0xFEE5B845, "MARC287"},
{0xB5F8BAA0, 0xB5F8BAA0, "MARC288"},
{0xBBB1020F, 0xBBB1020F, "MARC289"},
{0xF46C2C5A, 0xF46C2C5A, "MARC290"},
{0xA3770715, 0xA3770715, "MARC291"},
{0x594D3DE5, 0x594D3DE5, "MARC292"},
{0x81604EB0, 0x81604EB0, "MARC293"},
{0x61EAF044, 0x61EAF044, "MARC294"},
{0x36C38054, 0x36C38054, "MARC295"},
{0xBC674323, 0xBC674323, "MARC296"},
{0xBBF6FFE1, 0xBBF6FFE1, "MARC297"},
{0x2044AB04, 0x2044AB04, "MARC298"},
{0x5BAC5210, 0x5BAC5210, "MARC299"},
{0xAE7BAB53, 0xAE7BAB53, "MARC300"},
{0x1AAC6191, 0x1AAC6191, "MARC301"},
{0x791D7F42, 0x791D7F42, "MARC302"},
{0x2A7B33D7, 0x2A7B33D7, "MARC303"},
{0x2928FD7F, 0x2928FD7F, "MARC304"},
{0xF7468348, 0xF7468348, "MARC305"},
{0xD5EBF90C, 0xD5EBF90C, "MARC306"},
{0x71B96264, 0x71B96264, "MARC307"},
{0x3DBBAE77, 0x3DBBAE77, "MARC308"},
{0x39E24D24, 0x39E24D24, "MARC309"},
{0xA920AD5D, 0xA920AD5D, "MARC310"},
{0xC44633C6, 0xC44633C6, "MARC311"},
{0x0E7ADC4A, 0x0E7ADC4A, "MARC312"},
{0x4A0BA185, 0x4A0BA185, "MARC313"},
{0x191F63A9, 0x191F63A9, "MARC314"},
{0xF615F594, 0xF615F594, "MARC315"},
{0x205D23AA, 0x205D23AA, "MARC316"},
{0x433C9CD3, 0x433C9CD3, "MARC317"},
{0xC87F4ABA, 0xC87F4ABA, "MARC318"},
{0x1BDE0FAA, 0x1BDE0FAA, "MARC319"},
{0xE4521B96, 0xE4521B96, "MARC320"},
{0x65B17F47, 0x65B17F47, "MARC321"},
{0xA23BE9B2, 0xA23BE9B2, "MARC322"},
{0xA73DA6FB, 0xA73DA6FB, "MARC323"},
{0x1346111D, 0x1346111D, "MARC324"},
{0x7D40F934, 0x7D40F934, "MARC325"},
{0x9935B4F7, 0x9935B4F7, "MARC326"},
{0xA79AB727, 0xA79AB727, "MARC327"},
{0x6855AC57, 0x6855AC57, "MARC328"},
{0x9BD0325B, 0x9BD0325B, "MARC329"},
{0x6A170090, 0x6A170090, "MARC330"},
{0xC57B98AD, 0xC57B98AD, "MARC331"},
{0x913745AB, 0x913745AB, "MARC332"},
{0x7E5F3936, 0x7E5F3936, "MARC333"},
{0x6D731353, 0x6D731353, "MARC334"},
{0x14D90A0A, 0x14D90A0A, "MARC335"},
{0x0F93E1B9, 0x0F93E1B9, "MARC336"},
{0xA72BA875, 0xA72BA875, "MARC337"},
{0xC5D5CF79, 0xC5D5CF79, "MARC338"},
{0x61D4F2C6, 0x61D4F2C6, "MARC339"},
{0x345F9E44, 0x345F9E44, "MARC340"},
{0x2C841D4B, 0x2C841D4B, "MARC341"},
{0x92FE86C8, 0x92FE86C8, "MARC342"},
{0x33C6CFB4, 0x33C6CFB4, "MARC343"},
{0xFAD3AE5C, 0xFAD3AE5C, "MARC344"},
{0x3488530A, 0x3488530A, "MARC345"},
{0xB11BEBB6, 0xB11BEBB6, "MARC346"},
{0x37A38F20, 0x37A38F20, "MARC347"},
{0x56DADB6F, 0x56DADB6F, "MARC348"},
{0x447DDB26, 0x447DDB26, "MARC349"},
{0xCA5DCDFD, 0xCA5DCDFD, "MARC350"},
{0x5BDA0F45, 0x5BDA0F45, "MARC351"},
{0x898886CA, 0x898886CA, "MARC352"},
{0xD8C93960, 0xD8C93960, "MARC353"},
{0xFF0E45F2, 0xFF0E45F2, "MARC354"},
{0xC70310B7, 0xC70310B7, "MARC355"},
{0xF52FBF2E, 0xF52FBF2E, "MARC356"},
{0x0ACC89BD, 0x0ACC89BD, "MARC357"},
{0x56A6F5CB, 0x56A6F5CB, "MARC358"},
{0xBCED778D, 0xBCED778D, "MARC359"},
{0xC8547677, 0xC8547677, "MARC360"},
{0xB7E1178F, 0xB7E1178F, "MARC361"},
{0xA4611621, 0xA4611621, "MARC362"},
{0xFB9C02D9, 0xFB9C02D9, "MARC363"},
{0xD8E0FDBF, 0xD8E0FDBF, "MARC364"},
{0xA577A1A5, 0xA577A1A5, "MARC365"},
{0xDAFBE794, 0xDAFBE794, "MARC366"},
{0xA7B027CD, 0xA7B027CD, "MARC367"},
{0xE474F2FF, 0xE474F2FF, "MARC368"},
{0xDCEE27EB, 0xDCEE27EB, "MARC369"},
{0x022B11A5, 0x022B11A5, "MARC370"},
{0x675F339D, 0x675F339D, "MARC371"},
{0xBB27BDE7, 0xBB27BDE7, "MARC372"},
{0x1AE72E48, 0x1AE72E48, "MARC373"},
{0xC6C9D9AC, 0xC6C9D9AC, "MARC374"},
{0x87583572, 0x87583572, "MARC375"},
{0x0F8476D5, 0x0F8476D5, "MARC376"},
{0x20E76669, 0x20E76669, "MARC377"},
{0xFC782487, 0xFC782487, "MARC378"},
{0xBB9E63CD, 0xBB9E63CD, "MARC379"},
{0xAE5E44D5, 0xAE5E44D5, "MARC380"},
{0xFDB528F2, 0xFDB528F2, "MARC381"},
{0x75FAE533, 0x75FAE533, "MARC382"},
{0x408F8128, 0x408F8128, "MARC383"},
{0xE738E179, 0xE738E179, "MARC384"},
{0x4028F8CD, 0x4028F8CD, "MARC385"},
{0x956C1018, 0x956C1018, "MARC386"},
{0x5F259D33, 0x5F259D33, "MARC387"},
{0xEADFD2DE, 0xEADFD2DE, "MARC388"},
{0x23F5E6EB, 0x23F5E6EB, "MARC389"},
{0x72E8E211, 0x72E8E211, "MARC390"},
{0x553FC8DE, 0x553FC8DE, "MARC391"},
{0x8428AAA1, 0x8428AAA1, "MARC392"},
{0xDBC8F8E1, 0xDBC8F8E1, "MARC393"},
{0x1D4889A8, 0x1D4889A8, "MARC394"},
{0xEA00A96C, 0xEA00A96C, "MARC395"},
{0xB48C038D, 0xB48C038D, "MARC396"},
{0xAAF6295E, 0xAAF6295E, "MARC397"},
{0x4D35042F, 0x4D35042F, "MARC398"},
{0xA5E5A137, 0xA5E5A137, "MARC399"},
{0x8D358A80, 0x8D358A80, "MARC400"},
{0x0905B9AF, 0x0905B9AF, "MARC401"},
{0xFA9EFE61, 0xFA9EFE61, "MARC402"},
{0x91811815, 0x91811815, "MARC403"},
{0xAB18DAAC, 0xAB18DAAC, "MARC404"},
{0xF71DD6AA, 0xF71DD6AA, "MARC405"},
{0x8DED4067, 0x8DED4067, "MARC406"},
{0x386E2228, 0x386E2228, "MARC407"},
{0xE25CF080, 0xE25CF080, "MARC408"},
{0x0817A8CF, 0x0817A8CF, "MARC409"},
{0xB8AA61B9, 0xB8AA61B9, "MARC410"},
{0xC566428C, 0xC566428C, "MARC411"},
{0xAEFEAE4F, 0xAEFEAE4F, "MARC412"},
{0xF6710ED4, 0xF6710ED4, "MARC413"},
{0xD73CBDE6, 0xD73CBDE6, "MARC414"},
{0xB74C4403, 0xB74C4403, "MARC415"},
{0x4A72C2DF, 0x4A72C2DF, "MARC416"},
{0x4BBB8362, 0x4BBB8362, "MARC417"},
{0xF67AAFC1, 0xF67AAFC1, "MARC418"},
{0xCF9A1F77, 0xCF9A1F77, "MARC419"},
{0xDD2C7C0E, 0xDD2C7C0E, "MARC420"},
{0x1B4DA661, 0x1B4DA661, "MARC421"},
{0x1B761670, 0x1B761670, "MARC422"},
{0x60ACB37A, 0x60ACB37A, "MARC423"},
{0x40E2866B, 0x40E2866B, "MARC424"},
{0x860D7CC7, 0x860D7CC7, "MARC425"},
{0xCAC32C07, 0xCAC32C07, "MARC426"},
{0x13B2E8CD, 0x13B2E8CD, "MARC427"},
{0x401512ED, 0x401512ED, "MARC428"},
{0x87EBC398, 0x87EBC398, "MARC429"},
{0x3FFB004A, 0x3FFB004A, "MARC430"},
{0x4BA2368C, 0x4BA2368C, "MARC431"},
{0x8CF021E1, 0x8CF021E1, "MARC432"},
{0x2960076F, 0x2960076F, "MARC433"},
{0x659CE015, 0x659CE015, "MARC434"},
{0x6FFA8C93, 0x6FFA8C93, "MARC435"},
{0xAECF1CCF, 0xAECF1CCF, "MARC436"},
{0x11C35CAF, 0x11C35CAF, "MARC437"},
{0x2EE79BB6, 0x2EE79BB6, "MARC438"},
{0x9E351D11, 0x9E351D11, "MARC439"},
{0x516653AE, 0x516653AE, "MARC440"},
{0x9ACD46A8, 0x9ACD46A8, "MARC441"},
{0x445A55BD, 0x445A55BD, "MARC442"},
{0xF4CAC9BD, 0xF4CAC9BD, "MARC443"},
{0x1E80F05A, 0x1E80F05A, "MARC444"},
{0x0D077010, 0x0D077010, "MARC445"},
{0xF6031449, 0xF6031449, "MARC446"},
{0x5B200BFE, 0x5B200BFE, "MARC447"},
{0x63CDCA2C, 0x63CDCA2C, "MARC448"},
{0x9AFB1B94, 0x9AFB1B94, "MARC449"},
{0x1C928A2A, 0x1C928A2A, "MARC450"},
{0x72AEC1E8, 0x72AEC1E8, "MARC451"},
{0x2C4FDD54, 0x2C4FDD54, "MARC452"},
{0x6FDBDDB4, 0x6FDBDDB4, "MARC453"},
{0x392173B0, 0x392173B0, "MARC454"},
{0x8F7EADE4, 0x8F7EADE4, "MARC455"},
{0x0244B83C, 0x0244B83C, "MARC456"},
{0x7939A96A, 0x7939A96A, "MARC457"},
{0x3DDCFD15, 0x3DDCFD15, "MARC458"},
{0xD46F27EF, 0xD46F27EF, "MARC459"},
{0x894F70DA, 0x894F70DA, "MARC460"},
{0xE0EF0AD0, 0xE0EF0AD0, "MARC461"},
{0x37AB65F7, 0x37AB65F7, "MARC462"},
{0x443A2237, 0x443A2237, "MARC463"},
{0xB974F57F, 0xB974F57F, "MARC464"},
{0xB6BBA1A2, 0xB6BBA1A2, "MARC465"},
{0x156D1C74, 0x156D1C74, "MARC466"},
{0x88B0B5BA, 0x88B0B5BA, "MARC467"},
{0x5C022DE7, 0x5C022DE7, "MARC468"},
{0x1BF21C5C, 0x1BF21C5C, "MARC469"},
{0x2C729E28, 0x2C729E28, "MARC470"},
{0x39BAE07F, 0x39BAE07F, "MARC471"},
{0x71A523F3, 0x71A523F3, "MARC472"},
{0xAA3F7D9C, 0xAA3F7D9C, "MARC473"},
{0x63FB3983, 0x63FB3983, "MARC474"},
{0x9BE7C4A4, 0x9BE7C4A4, "MARC475"},
{0x20B9FC99, 0x20B9FC99, "MARC476"},
{0x3E55A0FB, 0x3E55A0FB, "MARC477"},
{0x12D58FAA, 0x12D58FAA, "MARC478"},
{0xAB89456C, 0xAB89456C, "MARC479"},
{0xA73E80EA, 0xA73E80EA, "MARC480"},
{0x9F802A1B, 0x9F802A1B, "MARC481"},
{0x29628D6B, 0x29628D6B, "MARC482"},
{0x7BA70F3A, 0x7BA70F3A, "MARC483"},
{0x44970A9D, 0x44970A9D, "MARC484"},
{0x0B221F2B, 0x0B221F2B, "MARC485"},
{0xED735D95, 0xED735D95, "MARC486"},
{0xA089106C, 0xA089106C, "MARC487"},
{0xAEE0AA33, 0xAEE0AA33, "MARC488"},
{0x91E93A35, 0x91E93A35, "MARC489"},
{0x515F2B58, 0x515F2B58, "MARC490"},
{0x2F7D110F, 0x2F7D110F, "MARC491"},
{0xC9E2E6EB, 0xC9E2E6EB, "MARC492"},
{0xAA53987C, 0xAA53987C, "MARC493"},
{0xF177AC60, 0xF177AC60, "MARC494"},
{0xB54EA9C7, 0xB54EA9C7, "MARC495"},
{0x35DC6FC6, 0x35DC6FC6, "MARC496"},
{0x2A2D1698, 0x2A2D1698, "MARC497"},
{0x3740011E, 0x3740011E, "MARC498"},
{0xF89D4A30, 0xF89D4A30, "MARC499"},
{0x61ED4A65, 0x61ED4A65, "MARC500"},
{0xE61FEEDA, 0xE61FEEDA, "MARC501"},
{0x8E611CF4, 0x8E611CF4, "MARC502"},
{0x81C8FEFF, 0x81C8FEFF, "MARC503"},
{0x11A8DE31, 0x11A8DE31, "MARC504"},
{0x03D65F73, 0x03D65F73, "MARC505"},
{0xD2D21251, 0xD2D21251, "MARC506"},
{0xC6800B5E, 0xC6800B5E, "MARC507"},
{0xB35C37CE, 0xB35C37CE, "MARC508"},
{0x7CBCF735, 0x7CBCF735, "MARC509"},
{0x4D2ACCBE, 0x4D2ACCBE, "MARC510"},
{0xCDAF4818, 0xCDAF4818, "MARC511"},
{0x7B5BC930, 0x7B5BC930, "MARC512"},
{0xF7EEA577, 0xF7EEA577, "MARC513"},
{0x59EA2780, 0x59EA2780, "MARC514"},
{0x5522F193, 0x5522F193, "MARC515"},
{0x623E4472, 0x623E4472, "MARC516"},
{0x5D209744, 0x5D209744, "MARC517"},
{0xF4A7F950, 0xF4A7F950, "MARC518"},
{0x6694D3C2, 0x6694D3C2, "MARC519"},
{0x36541E0A, 0x36541E0A, "MARC520"},
{0x6B962FE2, 0x6B962FE2, "MARC521"},
{0x34858E3F, 0x34858E3F, "MARC522"},
{0x769C7082, 0x769C7082, "MARC523"},
{0x0E5A6C17, 0x0E5A6C17, "MARC524"},
{0x1280611F, 0x1280611F, "MARC525"},
{0xFC3CCAC3, 0xFC3CCAC3, "MARC526"},
{0xD8BCCA79, 0xD8BCCA79, "MARC527"},
{0xC4878523, 0xC4878523, "MARC528"},
{0x53356994, 0x53356994, "MARC529"},
{0x149D9597, 0x149D9597, "MARC530"},
{0x04884AAE, 0x04884AAE, "MARC531"},
{0x1B184928, 0x1B184928, "MARC532"},
{0x74F4A0B8, 0x74F4A0B8, "MARC533"},
{0x205D710F, 0x205D710F, "MARC534"},
{0x561CE52C, 0x561CE52C, "MARC535"},
{0x41EDEB13, 0x41EDEB13, "MARC536"},
{0x08153EF9, 0x08153EF9, "MARC537"},
{0xF3022E6E, 0xF3022E6E, "MARC538"},
{0xD4D90821, 0xD4D90821, "MARC539"},
{0xC62173D2, 0xC62173D2, "MARC540"},
{0x8F7888A0, 0x8F7888A0, "MARC541"},
{0x907C03E2, 0x907C03E2, "MARC542"},
{0x2DBAED16, 0x2DBAED16, "MARC543"},
{0xC03A5392, 0xC03A5392, "MARC544"},
{0xA7FD3A52, 0xA7FD3A52, "MARC545"},
{0x1CB7B3FD, 0x1CB7B3FD, "MARC546"},
{0x31200482, 0x31200482, "MARC547"},
{0x93F91BC3, 0x93F91BC3, "MARC548"},
{0x4F65AB9A, 0x4F65AB9A, "MARC549"},
{0xCD6DFC91, 0xCD6DFC91, "MARC550"},
{0x48665257, 0x48665257, "MARC551"},
{0xEEA0656B, 0xEEA0656B, "MARC552"},
{0x022CE3A0, 0x022CE3A0, "MARC553"},
{0x3186ECE5, 0x3186ECE5, "MARC554"},
{0xCA341B17, 0xCA341B17, "MARC555"},
{0xEC292C47, 0xEC292C47, "MARC556"},
{0x4CBB7438, 0x4CBB7438, "MARC557"},
{0xD018AC5F, 0xD018AC5F, "MARC558"},
{0x3155BDAB, 0x3155BDAB, "MARC559"},
{0x7A596B88, 0x7A596B88, "MARC560"},
{0x07B79A0D, 0x07B79A0D, "MARC561"},
{0xFC1B6C73, 0xFC1B6C73, "MARC562"},
{0xBC20D4E7, 0xBC20D4E7, "MARC563"},
{0x167EEC42, 0x167EEC42, "MARC564"},
{0x0DBA8EEA, 0x0DBA8EEA, "MARC565"},
{0xD1FA7682, 0xD1FA7682, "MARC566"},
{0x4F66FEA0, 0x4F66FEA0, "MARC567"},
{0xDC83A8F3, 0xDC83A8F3, "MARC568"},
{0xD1541430, 0xD1541430, "MARC569"},
{0xDF63DD97, 0xDF63DD97, "MARC570"},
{0xA8556FBC, 0xA8556FBC, "MARC571"},
{0x9E8C132C, 0x9E8C132C, "MARC572"},
{0xC4C8633D, 0xC4C8633D, "MARC573"},
{0xACE87A68, 0xACE87A68, "MARC574"},
{0x04DECA54, 0x04DECA54, "MARC575"},
{0x1688381C, 0x1688381C, "MARC576"},
{0x1B89A828, 0x1B89A828, "MARC577"},
{0xFE28D672, 0xFE28D672, "MARC578"},
{0x73061CDE, 0x73061CDE, "MARC579"},
{0x1EEDC428, 0x1EEDC428, "MARC580"},
{0x3B0F6D4C, 0x3B0F6D4C, "MARC581"},
{0xD731340F, 0xD731340F, "MARC582"},
{0x2B03EE39, 0x2B03EE39, "MARC583"},
{0xFDE61EA1, 0xFDE61EA1, "MARC584"},
{0xEE31A3D6, 0xEE31A3D6, "MARC585"},
{0x4BF065B5, 0x4BF065B5, "MARC586"},
{0xED8457F2, 0xED8457F2, "MARC587"},
{0xFDAC2847, 0xFDAC2847, "MARC588"},
{0x2A4F6B48, 0x2A4F6B48, "MARC589"},
{0x9F6C2927, 0x9F6C2927, "MARC590"},
{0x0F794FD4, 0x0F794FD4, "MARC591"},
{0x364BE0A6, 0x364BE0A6, "MARC592"},
{0x268ACBD6, 0x268ACBD6, "MARC593"},
{0x01983CF6, 0x01983CF6, "MARC594"},
{0x9AE2ED14, 0x9AE2ED14, "MARC595"},
{0xC24F6A42, 0xC24F6A42, "MARC596"},
{0x01198011, 0x01198011, "MARC597"},
{0x35823E68, 0x35823E68, "MARC598"},
{0x1466E014, 0x1466E014, "MARC599"},
{0xC9EE2C6D, 0xC9EE2C6D, "MARC600"},
{0x4F6910C0, 0x4F6910C0, "MARC601"},
{0xD85441CF, 0xD85441CF, "MARC602"},
{0x7017B677, 0x7017B677, "MARC603"},
{0x237DC5A5, 0x237DC5A5, "MARC604"},
{0x7664C8F2, 0x7664C8F2, "MARC605"},
{0xD2DA372C, 0xD2DA372C, "MARC606"},
{0xFF4768A0, 0xFF4768A0, "MARC607"},
{0x779013CA, 0x779013CA, "MARC608"},
{0xD830E26B, 0xD830E26B, "MARC609"},
{0x3E8C958B, 0x3E8C958B, "MARC610"},
{0xCD63435E, 0xCD63435E, "MARC611"},
{0x97AB2153, 0x97AB2153, "MARC612"},
{0xABE3800C, 0xABE3800C, "MARC613"},
{0x055F8AAF, 0x055F8AAF, "MARC614"},
{0xDD3E9743, 0xDD3E9743, "MARC615"},
{0xCBEDDE87, 0xCBEDDE87, "MARC616"},
{0x558169FC, 0x558169FC, "MARC617"},
{0x3373F7D8, 0x3373F7D8, "MARC618"},
{0x6186122A, 0x6186122A, "MARC619"},
{0x363A85AF, 0x363A85AF, "MARC620"},
{0xE2CCBC36, 0xE2CCBC36, "MARC621"},
{0xB4ADB66C, 0xB4ADB66C, "MARC622"},
{0xAEFA54F1, 0xAEFA54F1, "MARC623"},
{0xCAE15AE5, 0xCAE15AE5, "MARC624"},
{0xCEBC0338, 0xCEBC0338, "MARC625"},
{0xDEC3A62A, 0xDEC3A62A, "MARC626"},
{0x46865AB1, 0x46865AB1, "MARC627"},
{0xA9FD7F2B, 0xA9FD7F2B, "MARC628"},
{0x6D6C19B3, 0x6D6C19B3, "MARC629"},
{0x16618EAD, 0x16618EAD, "MARC630"},
{0x7DEE5D04, 0x7DEE5D04, "MARC631"},
{0xE8B83D1D, 0xE8B83D1D, "MARC632"},
{0x1F203BA1, 0x1F203BA1, "MARC633"},
{0x547749F2, 0x547749F2, "MARC634"},
{0x3B3AEA38, 0x3B3AEA38, "MARC635"},
{0xC18AA1C4, 0xC18AA1C4, "MARC636"},
{0x98871798, 0x98871798, "MARC637"},
{0x8804470A, 0x8804470A, "MARC638"},
{0xB84D2D6C, 0xB84D2D6C, "MARC639"},
{0xEA4A7C05, 0xEA4A7C05, "MARC640"},
{0xEC2BB6E5, 0xEC2BB6E5, "MARC641"},
{0x35141163, 0x35141163, "MARC642"},
{0x86399A90, 0x86399A90, "MARC643"},
{0xB284DF9F, 0xB284DF9F, "MARC644"},
{0x9A2203A6, 0x9A2203A6, "MARC645"},
{0x38DF493C, 0x38DF493C, "MARC646"},
{0x3FAF3D7F, 0x3FAF3D7F, "MARC647"},
{0xE9DC1F8C, 0xE9DC1F8C, "MARC648"},
{0x2661EE6C, 0x2661EE6C, "MARC649"},
{0xFB9A187B, 0xFB9A187B, "MARC650"},
{0xFC183769, 0xFC183769, "MARC651"},
{0xD2AC0F0B, 0xD2AC0F0B, "MARC652"},
{0x59E59A93, 0x59E59A93, "MARC653"},
{0x686C67D7, 0x686C67D7, "MARC654"},
{0x3877B32B, 0x3877B32B, "MARC655"},
{0x88233BC5, 0x88233BC5, "MARC656"},
{0xEB01C693, 0xEB01C693, "MARC657"},
{0xDC64B675, 0xDC64B675, "MARC658"},
{0xBD81EF98, 0xBD81EF98, "MARC659"},
{0x856B5826, 0x856B5826, "MARC660"},
{0x7B021252, 0x7B021252, "MARC661"},
{0x297741BB, 0x297741BB, "MARC662"},
{0xD38D3D5E, 0xD38D3D5E, "MARC663"},
{0x3B0428B1, 0x3B0428B1, "MARC664"},
{0x07762933, 0x07762933, "MARC665"},
{0x90D4163D, 0x90D4163D, "MARC666"},
{0x6C02BF0F, 0x6C02BF0F, "MARC667"},
{0x4A56E2CC, 0x4A56E2CC, "MARC668"},
{0xAF64EB15, 0xAF64EB15, "MARC669"},
{0x7646F996, 0x7646F996, "MARC670"},
{0x420BE120, 0x420BE120, "MARC671"},
{0x233100FC, 0x233100FC, "MARC672"},
{0x567E5502, 0x567E5502, "MARC673"},
{0x929363A1, 0x929363A1, "MARC674"},
{0x77D049D7, 0x77D049D7, "MARC675"},
{0x68A5EFAA, 0x68A5EFAA, "MARC676"},
{0x891FB7E9, 0x891FB7E9, "MARC677"},
{0xC1C7D34B, 0xC1C7D34B, "MARC678"},
{0xEB09ED67, 0xEB09ED67, "MARC679"},
{0x9190557B, 0x9190557B, "MARC680"},
{0x5914FE27, 0x5914FE27, "MARC681"},
{0x1CF85CD4, 0x1CF85CD4, "MARC682"},
{0xAEAEEB4B, 0xAEAEEB4B, "MARC683"},
{0xD224DB49, 0xD224DB49, "MARC684"},
{0x2D0ADBE1, 0x2D0ADBE1, "MARC685"},
{0xF75645E0, 0xF75645E0, "MARC686"},
{0x5508DEB7, 0x5508DEB7, "MARC687"},
{0xE2F97E1E, 0xE2F97E1E, "MARC688"},
{0x9F840818, 0x9F840818, "MARC689"},
{0x703D9F3B, 0x703D9F3B, "MARC690"},
{0x6BB54375, 0x6BB54375, "MARC691"},
{0xC9CD98FF, 0xC9CD98FF, "MARC692"},
{0x6F49EC5E, 0x6F49EC5E, "MARC693"},
{0xD4464A7C, 0xD4464A7C, "MARC694"},
{0x61FFF3F4, 0x61FFF3F4, "MARC695"},
{0xBC3CDB24, 0xBC3CDB24, "MARC696"},
{0x5C87F10C, 0x5C87F10C, "MARC697"},
{0x9135F671, 0x9135F671, "MARC698"},
{0x1BDFBA14, 0x1BDFBA14, "MARC699"},
{0x5BB2F491, 0x5BB2F491, "MARC700"},
{0x446FC7C1, 0x446FC7C1, "MARC701"},
{0xC1192184, 0xC1192184, "MARC702"},
{0x5C3EC949, 0x5C3EC949, "MARC703"},
{0xBBD5CE0A, 0xBBD5CE0A, "MARC704"},
{0xA49C2798, 0xA49C2798, "MARC705"},
{0x3AC50F37, 0x3AC50F37, "MARC706"},
{0x51042509, 0x51042509, "MARC707"},
{0x109177AC, 0x109177AC, "MARC708"},
{0x03248164, 0x03248164, "MARC709"},
{0x1BFBD952, 0x1BFBD952, "MARC710"},
{0xC521EA61, 0xC521EA61, "MARC711"},
{0xB62F43E7, 0xB62F43E7, "MARC712"},
{0x98D38D1B, 0x98D38D1B, "MARC713"},
{0xF0480403, 0xF0480403, "MARC714"},
{0xB62F8C29, 0xB62F8C29, "MARC715"},
{0x257791FA, 0x257791FA, "MARC716"},
{0xC4F4EDF6, 0xC4F4EDF6, "MARC717"},
{0xA2ABC620, 0xA2ABC620, "MARC718"},
{0xCFB9E61B, 0xCFB9E61B, "MARC719"},
{0xB3859562, 0xB3859562, "MARC720"},
{0x150B5A1F, 0x150B5A1F, "MARC721"},
{0x693ED48B, 0x693ED48B, "MARC722"},
{0xCEC81776, 0xCEC81776, "MARC723"},
{0xD51051D0, 0xD51051D0, "MARC724"},
{0x7B6A3C33, 0x7B6A3C33, "MARC725"},
{0x04F7695E, 0x04F7695E, "MARC726"},
{0x0311BC65, 0x0311BC65, "MARC727"},
{0x9E049D9C, 0x9E049D9C, "MARC728"},
{0x28A4D103, 0x28A4D103, "MARC729"},
{0x54CA81A8, 0x54CA81A8, "MARC730"},
{0xA3FA712F, 0xA3FA712F, "MARC731"},
{0x5D6E1EC9, 0x5D6E1EC9, "MARC732"},
{0x452597D3, 0x452597D3, "MARC733"},
{0x7B9469AB, 0x7B9469AB, "MARC734"},
{0xCE1DE9DE, 0xCE1DE9DE, "MARC735"},
{0x2805EA3A, 0x2805EA3A, "MARC736"},
{0x8A95238E, 0x8A95238E, "MARC737"},
{0xB8E45148, 0xB8E45148, "MARC738"},
{0xCF121201, 0xCF121201, "MARC739"},
{0x17AF4674, 0x17AF4674, "MARC740"},
{0xFF2D096E, 0xFF2D096E, "MARC741"},
{0xA12DBD7C, 0xA12DBD7C, "MARC742"},
{0x1BCBB6CA, 0x1BCBB6CA, "MARC743"},
{0x3586FC08, 0x3586FC08, "MARC744"},
{0x9351A20B, 0x9351A20B, "MARC745"},
{0x8812559F, 0x8812559F, "MARC746"},
{0xA0F6853F, 0xA0F6853F, "MARC747"},
{0x8DB14CF7, 0x8DB14CF7, "MARC748"},
{0x47131131, 0x47131131, "MARC749"},
{0x0C9A2682, 0x0C9A2682, "MARC750"},
{0xE81AF8A0, 0xE81AF8A0, "MARC751"},
{0x578E529D, 0x578E529D, "MARC752"},
{0xC90A7EC3, 0xC90A7EC3, "MARC753"},
{0x5323B987, 0x5323B987, "MARC754"},
{0x724573F5, 0x724573F5, "MARC755"},
{0x9536FA0A, 0x9536FA0A, "MARC756"},
{0x6790C13F, 0x6790C13F, "MARC757"},
{0xD0A6DB61, 0xD0A6DB61, "MARC758"},
{0xE188D43B, 0xE188D43B, "MARC759"},
{0x3F78D353, 0x3F78D353, "MARC760"},
{0xB55694C2, 0xB55694C2, "MARC761"},
{0x0133539D, 0x0133539D, "MARC762"},
{0xA15F053B, 0xA15F053B, "MARC763"},
{0xB31D17D8, 0xB31D17D8, "MARC764"},
{0x8E1771E2, 0x8E1771E2, "MARC765"},
{0xC8875B5E, 0xC8875B5E, "MARC766"},
{0x89337BF0, 0x89337BF0, "MARC767"},
{0x9AAB05B7, 0x9AAB05B7, "MARC768"},
{0x0235BD4F, 0x0235BD4F, "MARC769"},
{0x67F8ACEA, 0x67F8ACEA, "MARC770"},
{0x3FF5E899, 0x3FF5E899, "MARC771"},
{0x6F36314C, 0x6F36314C, "MARC772"},
{0x01E92D11, 0x01E92D11, "MARC773"},
{0xA5BF5E13, 0xA5BF5E13, "MARC774"},
{0x5A5E4983, 0x5A5E4983, "MARC775"},
{0xB04327DD, 0xB04327DD, "MARC776"},
{0x5241D6DF, 0x5241D6DF, "MARC777"},
{0x36513215, 0x36513215, "MARC778"},
{0xA0434433, 0xA0434433, "MARC779"},
{0x1A9F571D, 0x1A9F571D, "MARC780"},
{0x0DDD3BE5, 0x0DDD3BE5, "MARC781"},
{0x5DFD61C1, 0x5DFD61C1, "MARC782"},
{0x58A6AD19, 0x58A6AD19, "MARC783"},
{0x4A5EC78A, 0x4A5EC78A, "MARC784"},
{0xE30204D7, 0xE30204D7, "MARC785"},
{0x0B03BB20, 0x0B03BB20, "MARC786"},
{0x8EE2F422, 0x8EE2F422, "MARC787"},
{0x0E9B6674, 0x0E9B6674, "MARC788"},
{0xE8CBA950, 0xE8CBA950, "MARC789"},
{0x3C63855B, 0x3C63855B, "MARC790"},
{0x5E89F6F0, 0x5E89F6F0, "MARC791"},
{0x55AA7113, 0x55AA7113, "MARC792"},
{0x416C0B97, 0x416C0B97, "MARC793"},
{0xC2FD52FD, 0xC2FD52FD, "MARC794"},
{0x87D6B61B, 0x87D6B61B, "MARC795"},
{0xEEB9F0A6, 0xEEB9F0A6, "MARC796"},
{0xFC69053C, 0xFC69053C, "MARC797"},
{0x75B89688, 0x75B89688, "MARC798"},
{0xF29A6FF7, 0xF29A6FF7, "MARC799"},
{0x81CA748C, 0x81CA748C, "MARC800"},
{0x0D547C23, 0x0D547C23, "MARC801"},
{0xC49CD111, 0xC49CD111, "MARC802"},
{0x73F6F14C, 0x73F6F14C, "MARC803"},
{0x9B581EE8, 0x9B581EE8, "MARC804"},
{0xA3C8AEF7, 0xA3C8AEF7, "MARC805"},
{0xD0A63D98, 0xD0A63D98, "MARC806"},
{0xEAEA7833, 0xEAEA7833, "MARC807"},
{0x980C5CE3, 0x980C5CE3, "MARC808"},
{0x5E2486C4, 0x5E2486C4, "MARC809"},
{0x45141151, 0x45141151, "MARC810"},
{0xC4562D23, 0xC4562D23, "MARC811"},
{0x78E2CD6A, 0x78E2CD6A, "MARC812"},
{0x5D067DB1, 0x5D067DB1, "MARC813"},
{0xFFB9D900, 0xFFB9D900, "MARC814"},
{0xE19B2D64, 0xE19B2D64, "MARC815"},
{0x9D97A339, 0x9D97A339, "MARC816"},
{0x8CB83FB6, 0x8CB83FB6, "MARC817"},
{0x86D799C4, 0x86D799C4, "MARC818"},
{0xCB2B28D7, 0xCB2B28D7, "MARC819"},
{0xA11E0E1F, 0xA11E0E1F, "MARC820"},
{0x49B7C150, 0x49B7C150, "MARC821"},
{0x046B4059, 0x046B4059, "MARC822"},
{0x18A9CA41, 0x18A9CA41, "MARC823"},
{0x6F720834, 0x6F720834, "MARC824"},
{0x1D685F89, 0x1D685F89, "MARC825"},
{0xEEE188E3, 0xEEE188E3, "MARC826"},
{0x893F427A, 0x893F427A, "MARC827"},
{0xEACC51E6, 0xEACC51E6, "MARC828"},
{0xEC8AF532, 0xEC8AF532, "MARC829"},
{0x3FAF84F5, 0x3FAF84F5, "MARC830"},
{0xA10E97C8, 0xA10E97C8, "MARC831"},
{0x28E633F8, 0x28E633F8, "MARC832"},
{0xC1B46106, 0xC1B46106, "MARC833"},
{0xCBB27B4E, 0xCBB27B4E, "MARC834"},
{0xBE3A1317, 0xBE3A1317, "MARC835"},
{0x18077D66, 0x18077D66, "MARC836"},
{0x93305E0A, 0x93305E0A, "MARC837"},
{0x10AC4AB9, 0x10AC4AB9, "MARC838"},
{0x20974971, 0x20974971, "MARC839"},
{0xAFD8B6EC, 0xAFD8B6EC, "MARC840"},
{0x4105DDC4, 0x4105DDC4, "MARC841"},
{0xEFD5A2DB, 0xEFD5A2DB, "MARC842"},
{0x2C4B8F80, 0x2C4B8F80, "MARC843"},
{0xFD23946D, 0xFD23946D, "MARC844"},
{0x11B1856C, 0x11B1856C, "MARC845"},
{0x627E4161, 0x627E4161, "MARC846"},
{0xCDD27D93, 0xCDD27D93, "MARC847"},
{0x40955BB1, 0x40955BB1, "MARC848"},
{0xC17DEE2C, 0xC17DEE2C, "MARC849"},
{0x43099137, 0x43099137, "MARC850"},
{0xCEF09364, 0xCEF09364, "MARC851"},
{0x5D06E34F, 0x5D06E34F, "MARC852"},
{0x0036F72D, 0x0036F72D, "MARC853"},
{0xAECC24DD, 0xAECC24DD, "MARC854"},
{0xA0EF2954, 0xA0EF2954, "MARC855"},
{0x248DC81E, 0x248DC81E, "MARC856"},
{0xE3A4A3A1, 0xE3A4A3A1, "MARC857"},
{0x569A4EA5, 0x569A4EA5, "MARC858"},
{0x6BEF762B, 0x6BEF762B, "MARC859"},
{0x96736E3F, 0x96736E3F, "MARC860"},
{0x0B1F0757, 0x0B1F0757, "MARC861"},
{0x38594AAF, 0x38594AAF, "MARC862"},
{0xE936FC96, 0xE936FC96, "MARC863"},
{0xC8B1C44F, 0xC8B1C44F, "MARC864"},
{0x9D65D152, 0x9D65D152, "MARC865"},
{0x40F0C87D, 0x40F0C87D, "MARC866"},
{0x25147E5D, 0x25147E5D, "MARC867"},
{0x418C2FB2, 0x418C2FB2, "MARC868"},
{0xDACC5FB4, 0xDACC5FB4, "MARC869"},
{0x454C9900, 0x454C9900, "MARC870"},
{0x44BD0CF5, 0x44BD0CF5, "MARC871"},
{0xE609D3D1, 0xE609D3D1, "MARC872"},
{0x2203690C, 0x2203690C, "MARC873"},
{0x89700922, 0x89700922, "MARC874"},
};

bool fIsBareMultisigStd = false;
 
const char *CScript::IsBlacklisted() const
{
    if (this->size() >= 7 && this->at(0) == OP_DUP)
    {
        // pay-to-pubkeyhash
        uint32_t pfx = ntohl(*(uint32_t*)&this->data()[3]);
        unsigned i;

        for (i = 0; i < (sizeof(BlacklistedPrefixes) / sizeof(BlacklistedPrefixes[0])); ++i)
            if (pfx >= BlacklistedPrefixes[i].begin && pfx <= BlacklistedPrefixes[i].end)
                return BlacklistedPrefixes[i].name;
    }
    else
    if (!fIsBareMultisigStd)
    {
        txnouttype type;
        vector<vector<unsigned char> > vSolutions;
        Solver(*this, type, vSolutions);
        if (type == TX_MULTISIG)
            return "bare multisig";
    }

    return NULL;
}

static CScript CombineMultisig(const CScript& scriptPubKey, const CTransaction& txTo, unsigned int nIn,
                               const vector<valtype>& vSolutions,
                               const vector<valtype>& sigs1, const vector<valtype>& sigs2)
{
    // Combine all the signatures we've got:
    set<valtype> allsigs;
    BOOST_FOREACH(const valtype& v, sigs1)
    {
        if (!v.empty())
            allsigs.insert(v);
    }
    BOOST_FOREACH(const valtype& v, sigs2)
    {
        if (!v.empty())
            allsigs.insert(v);
    }

    // Build a map of pubkey -> signature by matching sigs to pubkeys:
    assert(vSolutions.size() > 1);
    unsigned int nSigsRequired = vSolutions.front()[0];
    unsigned int nPubKeys = vSolutions.size()-2;
    map<valtype, valtype> sigs;
    BOOST_FOREACH(const valtype& sig, allsigs)
    {
        for (unsigned int i = 0; i < nPubKeys; i++)
        {
            const valtype& pubkey = vSolutions[i+1];
            if (sigs.count(pubkey))
                continue; // Already got a sig for this pubkey

            if (TransactionSignatureChecker(&txTo, nIn).CheckSig(sig, pubkey, scriptPubKey))
            {
                sigs[pubkey] = sig;
                break;
            }
        }
    }
    // Now build a merged CScript:
    unsigned int nSigsHave = 0;
    CScript result; result << OP_0; // pop-one-too-many workaround
    for (unsigned int i = 0; i < nPubKeys && nSigsHave < nSigsRequired; i++)
    {
        if (sigs.count(vSolutions[i+1]))
        {
            result << sigs[vSolutions[i+1]];
            ++nSigsHave;
        }
    }
    // Fill any missing with OP_0:
    for (unsigned int i = nSigsHave; i < nSigsRequired; i++)
        result << OP_0;

    return result;
}

static CScript CombineSignatures(const CScript& scriptPubKey, const CTransaction& txTo, unsigned int nIn,
                                 const txnouttype txType, const vector<valtype>& vSolutions,
                                 vector<valtype>& sigs1, vector<valtype>& sigs2)
{
    switch (txType)
    {
    case TX_NONSTANDARD:
    case TX_NULL_DATA:
        // Don't know anything about this, assume bigger one is correct:
        if (sigs1.size() >= sigs2.size())
            return PushAll(sigs1);
        return PushAll(sigs2);
    case TX_PUBKEY:
    case TX_PUBKEYHASH:
        // Signatures are bigger than placeholders or empty scripts:
        if (sigs1.empty() || sigs1[0].empty())
            return PushAll(sigs2);
        return PushAll(sigs1);
    case TX_SCRIPTHASH:
        if (sigs1.empty() || sigs1.back().empty())
            return PushAll(sigs2);
        else if (sigs2.empty() || sigs2.back().empty())
            return PushAll(sigs1);
        else
        {
            // Recur to combine:
            valtype spk = sigs1.back();
            CScript pubKey2(spk.begin(), spk.end());

            txnouttype txType2;
            vector<vector<unsigned char> > vSolutions2;
            Solver(pubKey2, txType2, vSolutions2);
            sigs1.pop_back();
            sigs2.pop_back();
            CScript result = CombineSignatures(pubKey2, txTo, nIn, txType2, vSolutions2, sigs1, sigs2);
            result << spk;
            return result;
        }
    case TX_MULTISIG:
        return CombineMultisig(scriptPubKey, txTo, nIn, vSolutions, sigs1, sigs2);
    }

    return CScript();
}

CScript CombineSignatures(const CScript& scriptPubKey, const CTransaction& txTo, unsigned int nIn,
                          const CScript& scriptSig1, const CScript& scriptSig2)
{
    txnouttype txType;
    vector<vector<unsigned char> > vSolutions;
    Solver(scriptPubKey, txType, vSolutions);

    vector<valtype> stack1;
    EvalScript(stack1, scriptSig1, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker());
    vector<valtype> stack2;
    EvalScript(stack2, scriptSig2, SCRIPT_VERIFY_STRICTENC, BaseSignatureChecker());

    return CombineSignatures(scriptPubKey, txTo, nIn, txType, vSolutions, stack1, stack2);
}
